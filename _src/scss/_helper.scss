/**
 * helper
 */


/*
Ladder
*/


._Ladder {
	> * {
		margin-top: 32px;

		@include mq {
			margin-top: 24px;
		}
	}

	&.-size_1 {

	}

	&.-size_XS {
		> * {
			margin-top: 8px;
		}
	}

	&.-size_S {
		> * {
			margin-top: 16px;
		}
	}

	&.-size_L {
		> * {
			margin-top: 56px;

			@include mq {
				margin-top: 32px;
			}
		}
	}

	&.-size_XL {
		> * {
			margin-top: 74px;

			@include mq {
				margin-top: 56px;
			}
		}
	}
}

[class*='_Ladder'] {
	> * {
		&:first-child {
			margin-top: 0;
		}
	}
}

._Ladder__Link,
._Ladder__Pager
{
	margin-top: 56px;

	@include mq {
		margin-top: 40px;
	}
}


/*
Text
*/


._text_1 {}


/*
Content width
*/


._Container {
	$space: 40px;

	width: 100%;
	max-width: map-get($container_width, 'main') + $space;
	padding-left: $mq_gutter_val;
	padding-right: $mq_gutter_val;
	margin-left: auto;
	margin-right: auto;

	& & {
		max-width: map-get($container_width, 'main');
		padding-left: 0;
		padding-right: 0;
	}

	@each $name, $propaty in $container_width {
		@if $name != 'main' {
			&.-#{$name} {
				max-width: $propaty + $space;

				@include mq {
					max-width: 100%;
				}

				._Container & {
					max-width: $propaty;

					@include mq {
						max-width: 100%;
					}
				}
			}
		}
	}
}


/*
Detect device
*/


._Full_block {
	display: block;
}

._Full_inBlock {
	display: inline-block;
}

._Full_inline {
	display: inline;
}

._Full_table {
	display: table;
}

._Full_tableCell {
	display: table-cell;
}

._Full_flex {
	display: flex;
}


%maxdn {
	display: none;
}

._Lite_block,
._Lite_inBlock,
._Lite_inline,
._Lite_table,
._Lite_tableCell,
._Lite_flex
{
	@extend %maxdn;
}

// Hidden `._Max~`.
@each $name, $propaty in $break_points {
	@if str-index($name, 'Max') {
		._#{$name}_block,
		._#{$name}_inBlock,
		._#{$name}_inline,
		._#{$name}_table,
		._#{$name}_tableCell,
		._#{$name}_flex
		{
			@extend %maxdn;
		}
	}
}

// Hidden `._Min~` on max-width: [Any propaty].
@each $name, $propaty in $break_points {
	@if str-index($name, 'Min') and not str-index($name, 'Max') {
		@media ( max-width: $propaty ) {
			._#{$name}_block,
			._#{$name}_inBlock,
			._#{$name}_inline,
			._#{$name}_table,
			._#{$name}_tableCell,
			._#{$name}_flex
			{
				display: none;
			}
		}
	}
}

@each $name, $propaty in $break_points {

	// Detect Full or Lite on size of `MaxS`.
	@if str-index($name, $detect_primary_size) {
		@include mq($name) {
			._Full_block,
			._Full_inBlock,
			._Full_inline,
			._Full_table,
			._Full_tableCell,
			._Full_flex
			{
				display: none;
			}

			._Lite_block {
				display: block;
			}

			._Lite_inBlock {
				display: inline-block;
			}

			._Lite_inline {
				display: inline;
			}

			._Lite_table {
				display: table;
			}

			._Lite_tableCell {
				display: table-cell;
			}

			._Lite_flex {
				display: flex;
			}
		}
	}

	// Show all size of `Max`.
	@if str-index($name, 'Max') and not str-index($name, 'Min') {
		@include mq($name) {
			._#{$name}_block {
				display: block;
			}

			._#{$name}_inBlock {
				display: inline-block;
			}

			._#{$name}_inline {
				display: inline;
			}

			._#{$name}_table {
				display: table;
			}

			._#{$name}_tableCell {
				display: table-cell;
			}

			._#{$name}_flex {
				display: flex;
			}
		}
	}
}

// Show between all size of `Min-Max`.
@each $name, $propaty in $break_points {
	@if str-index($name, 'Min') and str-index($name, 'Max') {
		@include mq($name) {
			._#{$name}_block {
				display: block;
			}

			._#{$name}_inBlock {
				display: inline-block;
			}

			._#{$name}_inline {
				display: inline;
			}

			._#{$name}_table {
				display: table;
			}

			._#{$name}_tableCell {
				display: table-cell;
			}

			._#{$name}_flex {
				display: flex;
			}
		}
	}
}


/*
Color parts
*/


@each $num, $propaty in $color {
	._color_#{$num} {
		color: $propaty;
	}
	._bg_color_#{$num} {
		background-color: $propaty;

		&:not(.-noPad) + &:not(.-noPad) {
			padding-top: 0;
		}
	}
}

@each $num, $propaty in $color_template {
	._color_#{$num} {
		color: $propaty;
	}
}


/*
General parts
*/


._Body {
	font-size: 16px;
	background-color: #fefefe;
	margin-top: $site_header_height;

	@include mq(MaxL) {
		margin-top: $site_header_height_sp;
	}

	&::before {
		// content: "";
		width: 1px;
		height: 100vh;
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 999999999;
		background-color: #3bffff;
		margin: auto;
	}
}


._Cf::after {
	content: " ";
	display: block;
	clear: both;
	height: 0;
	visibility: hidden;
}


._Ofi {
	width: 100%;
	height: 100%;
	font-family: 'object-fit: cover;';
	object-fit: cover;
}


._Overlay {
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 110;
	background-color: rgba(#fefefe, .85);
	display: none;

	@include mq {
		// display: block;
	}
}


._Void {
	pointer-events: none;
	cursor: default;
	opacity: .6;
}


._MaskFit {
	position: relative;
	padding-top: 60%;
	overflow: hidden;

	&.-ratio_youtube {
		padding-top: 56.25%;
	}
}

._MaskFit__Src {
	position: absolute;
	top: 0;
	left: 0;

	._MaskFit.-ratio_youtube & {
		width: 100%;
		height: 100%;
	}
}


._ScrollTable {
	@include mq {
		position: relative;

		&::before {
			content: "";
			width: 25%;
			height: 100%;
			position: absolute;
			top: 0;
			right: -20px;
			z-index: 2;
			background: linear-gradient(to right, rgba(#fff,0) 0%,rgba(#fff,1) 88%,rgba(#fff,1) 100%);
		}

		table {
			max-width: 800px;
		}
	}
}

._ScrollTable__inner {
	@include mq {
		width: calc( 100% + 20px );
		overflow: auto;
		-webkit-overflow-scrolling: touch !important;
	}
}

._ScrollTable__content {
	@include mq {
		display: flex;
		width: 800px;

		&::after {
			content: "";
			display: block;
			width: 20px;
		}
	}
}


._Tac {
	text-align: center !important;
}


._Tal {
	text-align: left !important;
}


._Tar {
	text-align: right !important;
}


._Vt {
	vertical-align: top !important;
}


._Vm {
	vertical-align: middle !important;
}


._Vb {
	vertical-align: bottom !important;
}


._Tdu {
	text-decoration: underline; word-break: break-all;
}


._Fl {
	float: left;
}


._Fr {
	float: right;
}


._Clear {
	clear: both;
}


._Hidden {
	display: none;
}


._Block {
	display: block;
}


._Relative {
	position: relative;
}


/*
Form sanitize
*/


._Sanitize_SubmitInput {
	background-color: transparent;
}


._Sanitize_Text {
	line-height: 1;
	width: 100%;
	background-color: #fefefe;
	border-radius: 0;
	appearance: none;

	&::-webkit-input-placeholder {
		@include mq(MaxM) {
			padding-top: .15em;
		}
	}
}


._Sanitize_HiddenInput {
	position: absolute;
	filter: alpha(opacity=0);
	opacity:0;
	appearance: none;
}


._Sanitize_Select {
	background-color: transparent;
	border-radius: 0;
	appearance: none;
	outline: none;
	cursor: pointer;
}


._Sanitize_Number {
	appearance: textfield;

	&::-webkit-outer-spin-button,
	&::-webkit-inner-spin-button
	{
		appearance: none;
		margin: 0;
	}
}


._Sanitize_Textarea {
	width: 100%;
	background-color: #fefefe;
	border-radius: 0;
	appearance: none;
}
